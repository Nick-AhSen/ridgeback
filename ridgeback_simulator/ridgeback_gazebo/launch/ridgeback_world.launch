<launch>
  <arg name="use_sim_time" default="true" />
  <arg name="gui" default="true" />
  <arg name="headless" default="false" />
  <arg name="world_name" default="$(find ridgeback_gazebo)/worlds/ridgeback_race.world" />

  <!-- Robot Spawn Pose -->
  <arg name="x" default="0"/>
  <arg name="y" default="0"/>
  <arg name="z" default="0.1"/>
  <arg name="yaw" default="0"/>
  <arg name="joystick" default="true" />
  <arg name="load_gripper" default="true" />
  <arg name="gripper_center" default="true"/>



  <!-- Configuration of Ridgeback which you would like to simulate.
       See ridgeback_description for details. -->
  <arg name="config" default="$(optenv RIDGEBACK_CONFIG base)" />

  <!-- Launch Gazebo with the specified world -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="debug" value="0" />
    <arg name="gui" value="$(arg gui)" />
    <arg name="use_sim_time" value="$(arg use_sim_time)" />
    <arg name="headless" value="$(arg headless)" />
    <!-- <arg name="world_name" value="$(arg world_name)" /> -->
    <arg name="paused" value="false"/>
  </include>

  <include file="$(find ridgeback_gazebo)/launch/spawn_ridgeback.launch">
    <arg name="config" value="$(arg config)" />
    <arg name="x" value="$(arg x)" />
    <arg name="y" value="$(arg y)" />
    <arg name="z" value="$(arg z)" />
    <arg name="yaw" value="$(arg yaw)" />
    <arg name="joystick" value="$(arg joystick)" />
  </include>

  <!-- Load joint controller configurations from YAML file to parameter server -->
    <rosparam file="$(find panda_simulation)/config/panda_control.yaml" command="load" />
    <rosparam file="$(find panda_simulation)/config/gazebo_ros_control_params.yaml" command="load"/>

    <!-- load the controllers -->
    <node name="controller_spawner_panda" pkg="controller_manager" type="spawner" respawn="false" output="screen" args="joint_state_controller panda_arm_controller" />
    <node if="$(arg load_gripper)" name="controller_spawner_hand" pkg="controller_manager" type="spawner" respawn="false" output="screen" args="panda_hand_controller" />



   <include file="$(find panda_moveit_config)/launch/planning_context.launch">
        <arg name="load_robot_description" value="false" />
        <arg name="load_gripper" value="$(arg load_gripper)" />
        <arg name="gripper_center" value="$(arg gripper_center)"/>
    </include>
  <include file="$(find panda_moveit_config)/launch/move_group.launch">
        <arg name="load_gripper" value="$(arg load_gripper)" />
        <arg name="gripper_center" value="$(arg gripper_center)"/>
    </include>
    <group if="$(arg gui)">
        <include file="$(find panda_moveit_config)/launch/moveit_rviz.launch" />
    </group>

    <node name="joint_state_desired_publisher" pkg="topic_tools" type="relay" args="joint_states joint_states_desired" />

    <!-- launch robot control node for moveit motion planning -->
    <node pkg="panda_simulation" type="robot_control_node" name="robot_control_node" output="screen" />

    <!-- load (not start!) custom joint position controller -->
    <node pkg="controller_manager" type="spawner" name="joint_position_launcher" args="--stopped joint_position_controller" />

    <node pkg="panda_simulation" type="robot_state_initializer_node" name="robot_state_initializer_node" />
</launch>
